{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./"
  },
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "prettier",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@next/next/recommended",
    "plugin:prettier/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript"
  ],
  "plugins": ["@typescript-eslint", "import"],
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "rules": {
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react/jsx-no-bind": "off",
    "import/no-default-export": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["**/*.stories.tsx", "**/*.test.tsx"]
      }
    ],
    "prettier/prettier": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/no-multi-comp": "error",
    "no-multiple-empty-lines": "error",
    "lines-between-class-members": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "camelcase": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": ["parameter"],
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": ["variable"],
        "format": ["camelCase"]
      },
      {
        "selector": ["variable"],
        "modifiers": ["const"],
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "modifiers": ["destructured"],
        "format": null
      },
      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      },
      {
        "selector": ["function"],
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "import/prefer-default-export": "off",
    "no-restricted-exports": "off",
    "react/jsx-closing-bracket-location": "off",
    "class-methods-use-this": "off",
    "no-useless-constructor": "off",
    "no-use-before-define": "off",
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "react/jsx-props-no-spreading": "off",
    "react/react-in-jsx-scope": "off",
    "no-unused-expressions": "off",
    "no-underscore-dangle": "off",
    "@typescript-eslint/no-floating-promises": "off"
  }
}
